# Ansible playbook to provision offline gpg stations
# Based on Debian 8 (jessie).
#
# This script requires an existent user on the target system. You can set the
# user and userhome below.
#
# It will also be run automatically to provision local vagrant boxes.
#
---
- hosts: all
  #  Do not set this to "yes". This would break `username` determination below.
  become: no
  vars:
    # do you want test packages installed (additionally)?
    install_test_packages: false
    # username to install nominatim as
    username: "{{ ansible_ssh_user }}"
    userhome: "/home/{{ username }}"

  tasks:
  - name: Update package cache if not done in last 24 hours.
    apt: update_cache=yes cache_valid_time=86400
    become: yes

  - name: Install system packages
    package:
      name={{ item }}
      state=present
    become: yes
    with_items:
      - aptitude
      - software-properties-common  # for add-apt-repository

  - name: Add apt-repo `ansible` for recent ansible version
    become: yes
    apt_repository:
        repo: "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main"
        state: present
        update_cache: yes
        filename: ansible

  - name: Enable key for ansible repo
    become: yes
    apt_key:
        keyserver: keyserver.ubuntu.com
        id: 6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367

  - name: Aptitude safe-upgrade
    apt: upgrade=safe update_cache='yes'
    become: yes

  - name: Install packages needed for gpg-offline
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    become: yes
    with_items:
      - ansible  #  need ansible locally when going offline
      - acl      #  for safe privilege escalation with ansible
      - git

